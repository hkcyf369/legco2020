{"version":3,"sources":["webpack:///./src/templates/TradFuncConstituency.js"],"names":["TradTemplateWrapper","styled","div","props","theme","spacing","TradHeader","Grid","CandidatesWrapper","TradFuncConstituencyTemplate","pageContext","uri","constituency","councillors","candidates","tags","useTranslation","t","i18n","titleOveride","withLanguage","meta","property","content","container","item","direction","justify","className","variant","color","seats","electors_total_2020","Number","electors_total_2016","last_election_vote_beijing_minus_demo","map","tag","label","i18nKey","c","key","node","info","filter","is_2020_candidate"],"mappings":"wOASMA,EAAsBC,IAAOC,IAAV,4FAAGD,CAAH,oFAEX,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,MAQxB,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,MAI1CC,EAAaL,YAAOM,KAAV,mFAAGN,CAAH,6EAGI,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,MAS3CG,EAAoBP,IAAOC,IAAV,0FAAGD,CAAH,sEAET,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,MAqF5BI,UAjFsB,SAAC,GAE/B,IAAD,IADJC,YAAeC,EACX,EADWA,IAAKC,EAChB,EADgBA,aAAcC,EAC9B,EAD8BA,YAAaC,EAC3C,EAD2CA,WAAYC,EACvD,EADuDA,KACvD,EACgBC,cAAZC,EADJ,EACIA,EAAGC,EADP,EACOA,KAEX,OACE,oCACE,kBAAC,IAAD,CACEP,IAAKA,EACLQ,aAAcC,YAAaF,EAAMN,EAAc,QAE/CS,KAAM,CACJ,CACEC,SAAU,WACVC,QAASH,YAAaF,EAAMN,EAAc,SAE5C,CACEU,SAAU,iBACVC,QAASH,YAAaF,EAAMN,EAAc,mBAIhD,kBAACZ,EAAD,KACE,kBAACM,EAAD,CAAYkB,WAAS,GACnB,kBAAC,IAAD,CAAMC,MAAI,GACR,kBAAC,IAAD,CACED,WAAS,EACTE,UAAU,SACVC,QAAQ,SACRC,UAAU,aAEV,kBAAC,IAAD,CAAYC,QAAQ,QAAQC,MAAM,iBAC/Bb,EAAE,cAAe,CAAEc,MAAOnB,EAAamB,SAE1C,yBAAKH,UAAU,SACZR,YAAaF,EAAMN,EAAc,WAIxC,kBAAC,IAAD,CAAMa,MAAI,GACR,kBAAC,IAAD,CAAYI,QAAQ,SACdZ,EAAE,oBADR,IAEIL,EAAaoB,oBAFjB,SAIIC,OAAOrB,EAAaoB,qBACpBC,OAAOrB,EAAasB,sBALxB,KAQA,kBAAC,IAAD,CAAYL,QAAQ,SACjBZ,EAAE,aAAc,IAChBL,EAAauB,yCAIpB,kBAAC,IAAD,CAAMP,UAAU,QAAQJ,WAAS,GAC9BT,EAAKqB,KAAI,SAAAC,GAAG,OACX,kBAAC,IAAD,CAAMC,MAAOrB,EAAE,OAAOoB,EAAIE,SAAYV,QAAQ,iBAGlD,kBAAC,IAAD,CAAYD,UAAU,QAAQC,QAAQ,SACnCT,YAAaF,EAAMN,EAAc,gBAEpC,kBAAC,IAAD,CAAYiB,QAAQ,MAAMZ,EAAE,uBAC5B,kBAAC,IAAD,CAAMO,WAAS,GACZX,EAAYuB,KAAI,SAAAI,GAAC,OAChB,kBAAC,IAAD,CAAcC,IAAKD,EAAEE,KAAMC,KAAMH,EAAEE,WAGvC,kBAAC,IAAD,CAAYb,QAAQ,MAAMZ,EAAE,aAC5B,kBAACT,EAAD,KACGM,EACE8B,QAAO,SAAAJ,GAAC,MAAiC,SAA7BA,EAAEE,KAAKG,qBACnBT,KAAI,SAAAI,GAAC,OACJ,kBAAC,IAAD,CAAcC,IAAKD,EAAEE,KAAMC,KAAMH,EAAEE","file":"component---src-templates-trad-func-constituency-js-d954e7e373ff9030309c.js","sourcesContent":["import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport Chip from '@/components/Chip';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { withLanguage } from '@/utils/i18n';\nimport { PeopleCircle } from '@/components/People';\nimport SEO from '@/components/seo';\n\nconst TradTemplateWrapper = styled.div`\n  .block {\n    margin: ${props => props.theme.spacing(1)}px 0;\n  }\n\n  .social {\n    font-size: 24px;\n  }\n\n  .social svg {\n    margin-left: ${props => props.theme.spacing(1)}px;\n  }\n`;\n\nconst TradHeader = styled(Grid)`\n\n  .title-box {\n    margin-right: ${props => props.theme.spacing(3)}px;\n  }\n  }\n  .title {\n    font-size: 24px;\n    font-weight: 700;\n  }\n`;\n\nconst CandidatesWrapper = styled.div`\n  display: grid;\n  grid-gap: ${props => props.theme.spacing(1)}px;\n  grid-template-columns: repeat(4, 1fr);\n`;\n\nconst TradFuncConstituencyTemplate = ({\n  pageContext: { uri, constituency, councillors, candidates, tags },\n}) => {\n  const { t, i18n } = useTranslation();\n\n  return (\n    <>\n      <SEO\n        uri={uri}\n        titleOveride={withLanguage(i18n, constituency, 'name')}\n        // TODO: duplicated entries, filter out in SEO later?\n        meta={[\n          {\n            property: 'og:title',\n            content: withLanguage(i18n, constituency, 'name'),\n          },\n          {\n            property: 'og:description',\n            content: withLanguage(i18n, constituency, 'description'),\n          },\n        ]}\n      />\n      <TradTemplateWrapper>\n        <TradHeader container>\n          <Grid item>\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"center\"\n              className=\"title-box\"\n            >\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                {t('no_of_seats', { seats: constituency.seats })}\n              </Typography>\n              <div className=\"title\">\n                {withLanguage(i18n, constituency, 'name')}\n              </div>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"body1\">\n              {`${t('number_of_voters')} ${\n                constituency.electors_total_2020\n              }（較16年${\n                Number(constituency.electors_total_2020) -\n                Number(constituency.electors_total_2016)\n              }）`}\n            </Typography>\n            <Typography variant=\"body1\">\n              {t('vote_diff')}{' '}\n              {constituency.last_election_vote_beijing_minus_demo}\n            </Typography>\n          </Grid>\n        </TradHeader>\n        <Grid className=\"block\" container>\n          {tags.map(tag => (\n            <Chip label={t(`tag.${tag.i18nKey}`)} variant=\"outlined\" />\n          ))}\n        </Grid>\n        <Typography className=\"block\" variant=\"body2\">\n          {withLanguage(i18n, constituency, 'description')}\n        </Typography>\n        <Typography variant=\"h5\">{t('current_legislator')}</Typography>\n        <Grid container>\n          {councillors.map(c => (\n            <PeopleCircle key={c.node} info={c.node} />\n          ))}\n        </Grid>\n        <Typography variant=\"h5\">{t('intended')}</Typography>\n        <CandidatesWrapper>\n          {candidates\n            .filter(c => c.node.is_2020_candidate === 'TRUE')\n            .map(c => (\n              <PeopleCircle key={c.node} info={c.node} />\n            ))}\n        </CandidatesWrapper>\n      </TradTemplateWrapper>\n    </>\n  );\n};\n\nexport default TradFuncConstituencyTemplate;\n"],"sourceRoot":""}