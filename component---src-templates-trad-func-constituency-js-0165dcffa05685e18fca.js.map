{"version":3,"sources":["webpack:///./src/templates/TradFuncConstituency.js"],"names":["TradTemplateWrapper","styled","div","theme","spacing","TradHeader","Grid","CandidatesWrapper","palette","warning","main","info","TradFuncConstituencyTemplate","pageContext","constituency","councillors","candidates","tags","useTranslation","t","i18n","container","item","direction","justify","className","variant","color","seats","withLanguage","electors_total_2020","Number","electors_total_2016","last_election_vote_beijing_minus_demo","map","tag","label","i18nKey","xs","c","onClick","navigate","getLocalizedPath","node","uuid","camp","toLowerCase","alt","src","image_url"],"mappings":"oPASMA,EAAsBC,IAAOC,IAAV,gGAAGD,CAAH,mFAEXE,IAAMC,QAAQ,GAQTD,IAAMC,QAAQ,IAI3BC,EAAaJ,YAAOK,KAAV,uFAAGL,CAAH,4EAGIE,IAAMC,QAAQ,IAS5BG,EAAoBN,IAAOC,IAAV,8FAAGD,CAAH,sSAETE,IAAMC,QAAQ,GAeRD,IAAMK,QAAQC,QAAQC,KAItBP,IAAMK,QAAQG,KAAKD,MA6HxBE,UApHsB,SAAC,GAE/B,IAAD,IADJC,YAAeC,EACX,EADWA,aAAcC,EACzB,EADyBA,YAAaC,EACtC,EADsCA,WAAYC,EAClD,EADkDA,KAClD,EACgBC,cAAZC,EADJ,EACIA,EAAGC,EADP,EACOA,KAEX,OACE,kBAACpB,EAAD,KACE,kBAACK,EAAD,CAAYgB,WAAS,GACnB,kBAAC,IAAD,CAAMC,MAAI,GACR,kBAAC,IAAD,CACED,WAAS,EACTE,UAAU,SACVC,QAAQ,SACRC,UAAU,aAEV,kBAAC,IAAD,CAAYC,QAAQ,QAAQC,MAAM,iBAC/BR,EAAE,cAAe,CAAES,MAAOd,EAAac,SAE1C,yBAAKH,UAAU,SACZI,YAAaT,EAAMN,EAAc,WAIxC,kBAAC,IAAD,CAAMQ,MAAI,GACR,kBAAC,IAAD,CAAYI,QAAQ,SAApB,QACWZ,EAAagB,oBADxB,SAEIC,OAAOjB,EAAagB,qBACpBC,OAAOjB,EAAakB,sBAHxB,KAMA,kBAAC,IAAD,CAAYN,QAAQ,SAApB,MAEGZ,EAAamB,yCAIpB,kBAAC,IAAD,CAAMR,UAAU,QAAQJ,WAAS,GAC9BJ,EAAKiB,KAAI,SAAAC,GAAG,OACX,kBAAC,IAAD,CAAMC,MAAOjB,EAAE,OAAOgB,EAAIE,SAAYX,QAAQ,iBAGlD,kBAAC,IAAD,CAAYD,UAAU,QAAQC,QAAQ,SACnCG,YAAaT,EAAMN,EAAc,gBAEpC,kBAAC,IAAD,CAAMO,WAAS,EAACjB,QAAS,GACvB,kBAAC,IAAD,CAAMkB,MAAI,EAACgB,GAAI,GACb,kBAAC,IAAD,WACA,kBAAC/B,EAAD,KACGQ,EAAYmB,KAAI,SAAAK,GACf,OACE,yBACEd,UAAU,yBACVe,QAAS,WACPC,mBACEC,YACEtB,EADc,YAEFmB,EAAEI,KAAKC,KAFL,IAEaf,YACzBT,EACAmB,EAAEI,KACF,YAMR,kBAAC,IAAD,CACElB,UAAS,UAAYc,EAAEI,KAAKE,KAAKC,cACjCC,IAAKlB,YAAaT,EAAMmB,EAAEI,KAAM,QAChCK,IAAKT,EAAEU,YAET,0BAAMxB,UAAU,SACbI,YAAaT,EAAMmB,EAAEI,KAAM,eAOxC,kBAAC,IAAD,CAAMrB,MAAI,EAACgB,GAAI,GACb,kBAAC,IAAD,YACA,kBAAC/B,EAAD,KACGS,EAAWkB,KAAI,SAAAK,GACd,OACE,yBACEd,UAAU,eACVe,QAAS,WACPC,mBACEC,YACEtB,EADc,YAEFmB,EAAEI,KAAKC,KAFL,IAEaf,YACzBT,EACAmB,EAAEI,KACF,YAMR,kBAAC,IAAD,CACElB,UAAS,UAAYc,EAAEI,KAAKE,KAAKC,cACjCC,IAAKlB,YAAaT,EAAMmB,EAAEI,KAAM,QAChCK,IAAKT,EAAEU,YAET,0BAAMxB,UAAU,SACbI,YAAaT,EAAMmB,EAAEI,KAAM","file":"component---src-templates-trad-func-constituency-js-0165dcffa05685e18fca.js","sourcesContent":["import React from 'react';\nimport { Grid, Avatar, Typography } from '@material-ui/core';\nimport Chip from '@/components/Chip';\nimport styled from 'styled-components';\nimport theme from '@/themes';\nimport { useTranslation } from 'react-i18next';\nimport { navigate } from 'gatsby';\nimport { withLanguage, getLocalizedPath } from '@/utils/i18n';\n\nconst TradTemplateWrapper = styled.div`\n  .block {\n    margin: ${theme.spacing(1)}px 0;\n  }\n\n  .social {\n    font-size: 24px;\n  }\n\n  .social svg {\n    margin-left: ${theme.spacing(1)}px;\n  }\n`;\n\nconst TradHeader = styled(Grid)`\n\n  .title-box {\n    margin-right: ${theme.spacing(3)}px;\n  }\n  }\n  .title {\n    font-size: 24px;\n    font-weight: 700;\n  }\n`;\n\nconst CandidatesWrapper = styled.div`\n  display: grid;\n  grid-gap: ${theme.spacing(1)}px;\n  grid-template-columns: repeat(3, 1fr);\n\n  .avatar-group {\n    display: flex;\n    flex-direction: column;\n    align-items: start;\n    justify-content: space-end;\n\n    .avatar {\n      width: 64px;\n      height: 64px;\n    }\n\n    .avatar.demo {\n      border: 3px ${theme.palette.warning.main} solid;\n    }\n\n    .avatar.beijing {\n      border: 3px ${theme.palette.info.main} solid;\n    }\n\n    .title {\n      text-align: center;\n    }\n  }\n`;\n\nconst TradFuncConstituencyTemplate = ({\n  pageContext: { constituency, councillors, candidates, tags },\n}) => {\n  const { t, i18n } = useTranslation();\n\n  return (\n    <TradTemplateWrapper>\n      <TradHeader container>\n        <Grid item>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            className=\"title-box\"\n          >\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {t('no_of_seats', { seats: constituency.seats })}\n            </Typography>\n            <div className=\"title\">\n              {withLanguage(i18n, constituency, 'name')}\n            </div>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body1\">\n            {`選民人數：${constituency.electors_total_2020}（較16年${\n              Number(constituency.electors_total_2020) -\n              Number(constituency.electors_total_2016)\n            }）`}\n          </Typography>\n          <Typography variant=\"body1\">\n            票差：\n            {constituency.last_election_vote_beijing_minus_demo}\n          </Typography>\n        </Grid>\n      </TradHeader>\n      <Grid className=\"block\" container>\n        {tags.map(tag => (\n          <Chip label={t(`tag.${tag.i18nKey}`)} variant=\"outlined\" />\n        ))}\n      </Grid>\n      <Typography className=\"block\" variant=\"body2\">\n        {withLanguage(i18n, constituency, 'description')}\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={3}>\n          <Typography>現任</Typography>\n          <CandidatesWrapper>\n            {councillors.map(c => {\n              return (\n                <div\n                  className=\"avatar-group clickable\"\n                  onClick={() => {\n                    navigate(\n                      getLocalizedPath(\n                        i18n,\n                        `/profile/${c.node.uuid}/${withLanguage(\n                          i18n,\n                          c.node,\n                          'name'\n                        )}`\n                      )\n                    );\n                  }}\n                >\n                  <Avatar\n                    className={`avatar ${c.node.camp.toLowerCase()}`}\n                    alt={withLanguage(i18n, c.node, 'name')}\n                    src={c.image_url}\n                  />\n                  <span className=\"title\">\n                    {withLanguage(i18n, c.node, 'name')}\n                  </span>\n                </div>\n              );\n            })}\n          </CandidatesWrapper>\n        </Grid>\n        <Grid item xs={9}>\n          <Typography>候選人</Typography>\n          <CandidatesWrapper>\n            {candidates.map(c => {\n              return (\n                <div\n                  className=\"avatar-group\"\n                  onClick={() => {\n                    navigate(\n                      getLocalizedPath(\n                        i18n,\n                        `/profile/${c.node.uuid}/${withLanguage(\n                          i18n,\n                          c.node,\n                          'name'\n                        )}`\n                      )\n                    );\n                  }}\n                >\n                  <Avatar\n                    className={`avatar ${c.node.camp.toLowerCase()}`}\n                    alt={withLanguage(i18n, c.node, 'name')}\n                    src={c.image_url}\n                  />\n                  <span className=\"title\">\n                    {withLanguage(i18n, c.node, 'name')}\n                  </span>\n                </div>\n              );\n            })}\n          </CandidatesWrapper>\n        </Grid>\n      </Grid>\n    </TradTemplateWrapper>\n  );\n};\n\nexport default TradFuncConstituencyTemplate;\n"],"sourceRoot":""}