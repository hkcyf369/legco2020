{"version":3,"sources":["webpack:///./src/templates/PrimariesResult.js","webpack:///./src/components/charts/VoteVsSeat.js"],"names":["Nav","styled","div","props","theme","spacing","palette","text","primary","secondary","main","Header","Grid","ProportionBar","left","background","default","right","action","disabled","CandidatesWrapper","PrimaryTemplate","pageContext","uri","allConstituencies","constituency","candidates","assets","useTranslation","t","i18n","ri18n","useRemoteI18n","site","useTheme","sections","length","push","name","title","content","map","asset","key","id","onClick","window","open","handleVideoUrl","assetId","asset_id","type","videoUrl","image","style","height","src","thumbnailUrl","thumbnail_url","imgUrl","alt","subTitle","channel","totalVotes","reduce","a","c","node","primaries_votes","maxVote","Math","max","getProportion","filter","tags","findIndex","tag","name_zh","votes","percentage","titleOveride","withLanguage","meta","property","className","to","getLocalizedPath","container","justify","item","direction","variant","color","list_count","xs","DC2019Result","vote","seat","Number","target","seats","calculateSeatBoxForPrimary","dangerouslySetInnerHTML","__html","enterTouchDelay","leaveTouchDelay","interactive","toFixed","sort","b","i","siteMetadata","siteUrl","uuid","info","subText","split","shift","width","navigate","status","getPeopleStatus","isWin","pageName","includes","maxWidth","trackCustomEvent","category","label","size","aria-label","position","bottom","backgroundColor","marginRight","config","VoteVsSeat","svgRef","useRef","wrapperRef","dimensions","useResizeObserver","useEffect","svg","select","current","barHeight","barMargin","textMargin","labelFontSize","total","DEMO","BEIJING","percent","scaleLinear","domain","range","votesArr","value","cumulative","seatColorMapping","FC_EXPECTED_WIN_DEMO","FC_EXPECTED_WIN_BEIJING","xScale","selectAll","remove","append","attr","data","join","d","paper","ref","overflow","display"],"mappings":"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","file":"component---src-templates-primaries-result-js-4b1ab75fe50ea9c54357.js","sourcesContent":["/* eslint-disable react/no-danger */\nimport React from 'react';\nimport { Grid, Typography, Fab, Container } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { DC2019Result } from '@/data/ElectionResults';\nimport VoteVsSeatChart from '@/components/charts/VoteVsSeat';\nimport {\n  calculateSeatBoxForPrimary,\n  handleVideoUrl,\n  getPeopleStatus,\n} from '@/utils';\nimport { getLocalizedPath, withLanguage, useRemoteI18n } from '@/utils/i18n';\nimport { Link, navigate, useStaticQuery, graphql } from 'gatsby';\nimport { PeopleResultBox } from '@/components/People';\nimport ResponsiveSections from '@/components/ResponsiveSections';\nimport List from '@/components/List';\nimport SEO from '@/components/seo';\nimport { CompactImageLinkBox } from '@/components/LinkBox';\nimport { useTheme } from '@material-ui/core/styles';\nimport { FaVoteYea } from 'react-icons/fa';\nimport { trackCustomEvent } from 'gatsby-plugin-google-analytics';\nimport { DefaultTooltip } from '@/components/Tooltip';\nimport { BsInfoCircleFill } from 'react-icons/bs';\n\nconst Nav = styled.div`\n  padding: ${props => props.theme.spacing(1)}px 0;\n  overflow-x: auto;\n  white-space: nowrap;\n\n  .nav-link {\n    color: ${props => props.theme.palette.text.primary};\n    text-decoration: none;\n    font-size: 1rem;\n    margin-bottom: ${props => props.theme.spacing(1)}px;\n    margin-right: ${props => props.theme.spacing(1)}px;\n    padding: 4px 8px;\n  }\n\n  .active {\n    font-weight: 700;\n    color: #ffffff;\n    background: ${props => props.theme.palette.secondary.main};\n    border-radius: 5px;\n  }\n`;\n\nconst Header = styled(Grid)`\n  margin-bottom: ${props => props.theme.spacing(2)}px;\n\n  .title-box {\n    margin-right: ${props => props.theme.spacing(3)}px;\n  }\n`;\n\nconst ProportionBar = styled.div`\n  margin: ${props => props.theme.spacing(2)}px 0;\n\n  .labels {\n    display: flex;\n    align-items: baseline;\n    svg {\n      margin-left: 4px;\n    }\n  }\n\n  .bar {\n    display: flex;\n\n    .left {\n      height: 18px;\n      width: ${props => props.left}%;\n      border-radius: 16px 0 0 16px;\n      background: ${props => props.theme.palette.secondary.main};\n      vertical-align: center;\n\n      .percentage {\n        font-weight: 700;\n        margin-left: 8px;\n        color: ${props => props.theme.palette.background.default};\n      }\n    }\n\n    .right {\n      height: 18px;\n      width: ${props => props.right}%;\n      border-radius: 0 16px 16px 0;\n      background: ${props => props.theme.palette.action.disabled};\n    }\n  }\n`;\n\nconst CandidatesWrapper = styled.div`\n  margin-top: ${props => props.theme.spacing(2)}px;\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  grid-row-gap: ${props => props.theme.spacing(1.5)}px;\n\n  .candi-box {\n    display: flex;\n    align-items: center;\n  }\n`;\n\nconst PrimaryTemplate = ({\n  pageContext: { uri, allConstituencies, constituency, candidates, assets },\n}) => {\n  const { t, i18n } = useTranslation();\n  const ri18n = useRemoteI18n();\n\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            siteUrl\n          }\n        }\n      }\n    `\n  );\n\n  const theme = useTheme();\n\n  const sections = [];\n\n  if (assets.length) {\n    sections.push({\n      name: 'election_forum',\n      title: t('election_forum'),\n      content: (\n        <List>\n          {assets.map(asset => (\n            <CompactImageLinkBox\n              key={asset.id}\n              onClick={() => {\n                window.open(\n                  handleVideoUrl({\n                    assetId: asset.asset_id,\n                    type: asset.type,\n                  }).videoUrl,\n                  '_blank'\n                );\n              }}\n              image={\n                <img\n                  style={{\n                    height: '100%',\n                  }}\n                  src={\n                    handleVideoUrl({\n                      assetId: asset.asset_id,\n                      type: asset.type,\n                      thumbnailUrl: asset.thumbnail_url,\n                    }).imgUrl\n                  }\n                  alt={asset.title}\n                />\n              }\n              title={asset.title}\n              subTitle={asset.channel}\n            />\n          ))}\n        </List>\n      ),\n    });\n  }\n\n  const totalVotes = candidates.reduce((a, c) => a + c.node.primaries_votes, 0);\n  const maxVote = Math.max(...candidates.map(c => c.node.primaries_votes));\n\n  const getProportion = () => {\n    const left = candidates\n      .filter(\n        c => c.node.tags.findIndex(tag => tag.name_zh === '本土及抗爭派') > -1\n      )\n      .reduce((a, c) => a + c.node.primaries_votes, 0);\n    const right = candidates\n      .filter(\n        c => c.node.tags.findIndex(tag => tag.name_zh === '本土及抗爭派') === -1\n      )\n      .reduce((a, c) => a + c.node.primaries_votes, 0);\n\n    return {\n      left: {\n        votes: left,\n        percentage: (left / totalVotes) * 100,\n      },\n      right: {\n        votes: right,\n        percentage: (right / totalVotes) * 100,\n      },\n    };\n  };\n\n  return (\n    <>\n      <SEO\n        uri={uri}\n        titleOveride={`${t('primaries_result.title')} | ${withLanguage(\n          i18n,\n          constituency,\n          'name'\n        )}`}\n        // TODO: duplicated entries, filter out in SEO later?\n        meta={[\n          {\n            property: 'og:title',\n            content: `${t('primaries_result.title')} | ${withLanguage(\n              i18n,\n              constituency,\n              'name'\n            )}`,\n          },\n          {\n            property: 'og:description',\n            content: withLanguage(i18n, constituency, 'primary_description'),\n          },\n        ]}\n      />\n      <Nav>\n        {allConstituencies.map(c => (\n          <Link\n            key={c.node.key}\n            className={`nav-link ${\n              c.node.key === constituency.key ? 'active' : ''\n            }`}\n            to={getLocalizedPath(i18n, `/primaries/${c.node.key}`)}\n          >\n            {withLanguage(i18n, c.node, 'alias')}\n          </Link>\n        ))}\n      </Nav>\n      <Header container justify=\"flex-start\">\n        <Grid item>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            className=\"title-box\"\n          >\n            <Typography variant=\"h3\">\n              {withLanguage(i18n, constituency, 'name')}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {withLanguage(i18n, constituency, 'primary_rule')}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {t('list_count', { list_count: candidates.length })}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Grid item xs={7}>\n          {DC2019Result[constituency.key] && (\n            <VoteVsSeatChart\n              title={{\n                vote: t('dc2019_demo_beijing_ratio'),\n                seat:\n                  Number(constituency.target) > 0\n                    ? t('demo_target', { target: constituency.target })\n                    : t('demo_target_not_decide'),\n              }}\n              votes={DC2019Result[constituency.key].votes}\n              seats={calculateSeatBoxForPrimary(constituency)}\n            />\n          )}\n        </Grid>\n      </Header>\n      {withLanguage(i18n, constituency, 'primary_description') && (\n        <Typography\n          className=\"block\"\n          variant=\"body1\"\n          dangerouslySetInnerHTML={{\n            __html: withLanguage(i18n, constituency, 'primary_description'),\n          }}\n        />\n      )}\n      {!!totalVotes && constituency.key !== 'HS' && (\n        <ProportionBar\n          left={getProportion().left.percentage}\n          right={getProportion().right.percentage}\n        >\n          <div className=\"labels\">\n            <Typography variant=\"h5\" className=\"left-label\">\n              {t('resistance_localist')}\n            </Typography>\n            <DefaultTooltip\n              title={\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: ri18n('resistance_localist_remarks'),\n                  }}\n                />\n              }\n              enterTouchDelay={10}\n              leaveTouchDelay={5000}\n              interactive\n            >\n              <div>\n                <BsInfoCircleFill />\n              </div>\n            </DefaultTooltip>\n          </div>\n          <div className=\"bar\">\n            <div className=\"left\">\n              <Typography variant=\"h6\" className=\"percentage\">\n                {getProportion().left.percentage.toFixed(2)}%\n              </Typography>\n            </div>\n            <div className=\"right\" />\n          </div>\n        </ProportionBar>\n      )}\n      <CandidatesWrapper>\n        {candidates\n          .sort((a, b) => {\n            if (\n              Number(a.node.primaries_votes) < Number(b.node.primaries_votes)\n            ) {\n              return 1;\n            }\n            return -1;\n          })\n          .map((c, i) => (\n            <div key={withLanguage(i18n, c.node, 'name')} className=\"clickable\">\n              <PeopleResultBox\n                item\n                imgUrl={`${site.siteMetadata.siteUrl}/images/avatars/${c.node.uuid}.png`}\n                key={c.node.name_zh}\n                info={c.node}\n                name={withLanguage(i18n, c.node, 'name')}\n                subText={\n                  withLanguage(i18n, c.node, 'title') &&\n                  withLanguage(i18n, c.node, 'title')\n                    .split(/[，、,]+/)\n                    .shift()\n                }\n                votes={c.node.primaries_votes}\n                percentage={c.node.primaries_votes / totalVotes}\n                width={(c.node.primaries_votes / maxVote) * 100}\n                onClick={() => {\n                  navigate(\n                    getLocalizedPath(\n                      i18n,\n                      `/profile/${c.node.uuid}/${c.node.name_zh}`\n                    )\n                  );\n                }}\n                status={getPeopleStatus(c.node)}\n                isWin={\n                  constituency.key === 'HS' ? true : i < constituency.target\n                }\n              />\n            </div>\n          ))}\n      </CandidatesWrapper>\n      <ResponsiveSections\n        sections={sections}\n        pageName={`primary_${constituency.name_zh}`}\n      />\n      {['HKI', 'KLW', 'KLE', 'NTW', 'NTE', 'HS'].includes(constituency.key) && (\n        <Container maxWidth=\"lg\">\n          <Fab\n            className=\"clickable\"\n            onClick={() => {\n              trackCustomEvent({\n                category: 'primaries_stations',\n                action: 'click_primaries_stations',\n                label: constituency.name_zh,\n              });\n              navigate(\n                getLocalizedPath(\n                  i18n,\n                  `/primaries/stations/${constituency.key}`\n                )\n              );\n            }}\n            variant=\"extended\"\n            size=\"medium\"\n            aria-label=\"add\"\n            style={{\n              position: 'fixed',\n              bottom: theme.spacing(2),\n              right: theme.spacing(2),\n              backgroundColor: theme.palette.secondary.main,\n              color: '#FFFFFF',\n            }}\n          >\n            <FaVoteYea\n              style={{\n                width: 24,\n                height: 24,\n                marginRight: theme.spacing(1),\n              }}\n            />\n            {t('primaries_stations.title')}\n          </Fab>\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default PrimaryTemplate;\n","import React, { useRef, useEffect } from 'react';\nimport useResizeObserver from '@/utils/ResizeObserver';\nimport { select, scaleLinear } from 'd3';\nimport { useTheme } from '@material-ui/core/styles';\nimport { seatColorMapping } from '@/config';\n\nconst config = {\n  margin: { top: 0, right: 0, bottom: 0, left: 0 },\n  barHeight: 24,\n  textMargin: 3,\n  barMargin: 5,\n  labelFontSize: 12,\n  // ...config\n};\n\nfunction VoteVsSeat({ votes, seats, title }) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  const theme = useTheme();\n  \n  // will be called initially and on every votes change\n  useEffect(() => {\n    const svg = select(svgRef.current);\n\n    if (!dimensions) return;\n\n    const { barHeight, barMargin, textMargin, labelFontSize } = config;\n\n    const total = votes.DEMO + votes.BEIJING;\n\n    const percent = scaleLinear().domain([0, total]).range([0, 100]);\n\n    const votesArr = [\n      {\n        value: votes.DEMO,\n        cumulative: 0,\n        percentage: percent(votes.DEMO),\n        color: seatColorMapping.FC_EXPECTED_WIN_DEMO,\n      },\n      {\n        value: votes.BEIJING,\n        cumulative: votes.DEMO,\n        percentage: percent(votes.BEIJING),\n        color: seatColorMapping.FC_EXPECTED_WIN_BEIJING,\n      },\n    ];\n\n    // set up scales for horizontal placement\n    const xScale = scaleLinear()\n      .domain([0, total])\n      .range([0, barHeight * seats.length]);\n\n    svg.selectAll('.vote-label').remove();\n    svg\n      .append('text')\n      .attr('class', 'vote-label')\n      .attr('text-anchor', 'start')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('transform', `translate(${0},${labelFontSize})`)\n      .style('fill', theme.palette.text.primary)\n      .style('font-size', labelFontSize)\n      .style('font-weight', 400)\n      .text(title.vote);\n\n    // stack rect for each votes value\n    svg\n      .selectAll('.vote-stacked')\n      .data(votesArr)\n      .join('rect')\n      .attr('class', 'vote-stacked')\n      .attr('x', d => xScale(d.cumulative))\n      .attr('y', labelFontSize + textMargin)\n      .attr('height', barHeight)\n      .attr('width', d => xScale(d.value))\n      .style('fill', d => d.color)\n      .style('stroke', theme.palette.background.paper);\n\n    svg.selectAll('.seat-label').remove();\n    svg\n      .append('text')\n      .attr('class', 'seat-label')\n      .attr('text-anchor', 'start')\n      .attr('x', 0)\n      .attr('y', labelFontSize + textMargin + barHeight + barMargin / 2)\n      .attr('transform', `translate(${0},${labelFontSize})`)\n      .style('fill', theme.palette.text.primary)\n      .style('font-size', labelFontSize)\n      .style('font-weight', 400)\n      .text(title.seat);\n\n    // stack rect for each data value\n    svg.selectAll('.seat-stacked').remove();\n    svg\n      .selectAll('seat')\n      .data(seats)\n      .join('rect')\n      .attr('class', 'seat-stacked')\n      .attr('x', (d, i) => i * barHeight)\n      .attr(\n        'y',\n        labelFontSize + textMargin + barHeight + barMargin + labelFontSize\n      )\n      .attr('height', barHeight)\n      .attr('width', barHeight)\n      .style('fill', d => d.color)\n      .style('stroke', theme.palette.background.paper);\n\n    // add the labels\n    svg\n      .selectAll('.text-percentage-label')\n      .data(votesArr)\n      .join('text')\n      .attr('class', 'text-percentage-label')\n      .attr('text-anchor', 'middle')\n      .attr('x', d => xScale(d.cumulative) + xScale(d.value) / 2)\n      .attr('y', labelFontSize + textMargin + barHeight / 2 + 5)\n      .style('fill', '#000000')\n      .style('font-size', 16)\n      .style('font-weight', 700)\n      .text(d => `${d.percentage.toFixed(0)}%`);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [votes, seats, dimensions]);\n\n  return (\n    <div ref={wrapperRef}>\n      <svg\n        ref={svgRef}\n        style={{\n          overflow: 'visible',\n          display: 'block',\n          width: `${config.barHeight * seats.length}px`,\n          height: '84px',\n        }}\n      />\n    </div>\n  );\n}\n\nexport default VoteVsSeat;\n"],"sourceRoot":""}