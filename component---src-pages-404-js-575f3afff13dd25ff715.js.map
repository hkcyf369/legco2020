{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///(webpack)/buildin/global.js"],"names":["NotFoundPage","title","g","this","Function","e","window","module","exports"],"mappings":"4FAAA,4CAWeA,UARM,kBACnB,oCACE,kBAAC,IAAD,CAAKC,MAAM,mBACX,yCACA,yF,mBCPJ,IAAIC,EAEJA,EAAI,WACF,OAAOC,KADL,GAIJ,IAEED,EAAIA,GAAK,IAAIE,SAAS,cAAb,GACT,MAAOC,GAEe,iBAAXC,SAAqBJ,EAAII,QAMtCC,EAAOC,QAAUN","file":"component---src-pages-404-js-575f3afff13dd25ff715.js","sourcesContent":["import React from 'react';\nimport SEO from '../components/seo';\n\nconst NotFoundPage = () => (\n  <>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </>\n);\n\nexport default NotFoundPage;\n","var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;"],"sourceRoot":""}